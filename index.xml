<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>及时当勉励，岁月不待人！@iNuo</title>
    <link>https://xshi000.github.io/</link>
    <description>Recent content on 及时当勉励，岁月不待人！@iNuo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 28 Sep 2020 22:26:11 +0800</lastBuildDate>
    
	<atom:link href="https://xshi000.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>向《经济学人》学图表</title>
      <link>https://xshi000.github.io/excel/</link>
      <pubDate>Mon, 28 Sep 2020 22:26:11 +0800</pubDate>
      
      <guid>https://xshi000.github.io/excel/</guid>
      <description>图表规范 经济学人主题 结合以上规范及图表对比，进一步设置自己Excel的主题
结合设置好的Excel主题，完成一次模拟
利用单元格作图
自我风格 基础图表 </description>
    </item>
    
    <item>
      <title>数学建模算法汇总</title>
      <link>https://xshi000.github.io/mm/</link>
      <pubDate>Mon, 28 Sep 2020 21:03:24 +0800</pubDate>
      
      <guid>https://xshi000.github.io/mm/</guid>
      <description>评价类问题：层次分析法、优劣解距离法、模糊综合评价法、灰色关联分析等
预测类问题：拟合、回归、灰色预测、时间序列预测、神经网络预测等
优化类问题：非线性规划、整数规划、模拟退火、遗传算法等
   算法 应用 特点 步骤     层次分析法 评价类问题 无数据，主观性强 1.建立系统的递阶层次结构；2. 构造判断矩阵；3. 计算权重并一致性检验；4 . 计算得分，并进行排序。   优劣解距离法 综合评价 有数据，客观 1.将原始矩阵正向化；2.正向化矩阵标准化；3.计算得分并归一化。   灰色关联分析 系统分析、综合评价 基于曲线形状的相似程度 1.画统计图；2.确定分析数列；3.变量预处理；4.计算关联系数；5.计算灰色关联度。   模糊综合评价 综合评价 把论域中的对象对应评语集中一个评语；将方案作为评语集并选择一个最优方案 1.确定因素集；2.确定评语集；3.确定各因素的权重；4.确定模糊综合判断矩阵；5.综合评判。         插值 补充数据、短期预测 数据量少/缺少数据 常用：三次埃尔米特插值；三次样条插值。   拟合 拟合曲线、数据预测 一条确定的曲线 最小化损失函数 VS拟合函数尽可能简单   时间序列分析 描述过去、分析规律、预测未来 时间序列分解、指数平滑模型(7种)、ARIMA/SARIMA模型 扩展：ARCH/GARCH模型   预测 预测 灰色预测-GM模型、神经网络-nftool ①作时序图，分析趋势；②拆分数据集，挑选模型；指数平滑/ARIMA/灰色预测/神经网络等；指标：SSE③建模预测；④做时序图（预测前后）。         相关系数 变量间的相关性 衡量线性相关程度、spss应用、相关系数 + 显著性、皮尔逊&amp;amp;斯皮尔曼相关系数 先画散点图确定线性关系再求解线性相关系数比较；计算相关系数并假设检验；前提：服从正太分布；(JB检验/威尔克检验/QQ图)；扩展：正态分布均值假设检验。   典型相关分析 两组变量的相关性 基本思想：与主成分分析相似找代表(变量的线性组合) 1.</description>
    </item>
    
    <item>
      <title>Anaconda 那些事</title>
      <link>https://xshi000.github.io/anaconda/</link>
      <pubDate>Mon, 20 Jul 2020 15:32:46 +0800</pubDate>
      
      <guid>https://xshi000.github.io/anaconda/</guid>
      <description>【声明】本篇博客为个人笔记整理，笔记来源各个技术博客/书籍/个人编撰，如有侵权，必删之！
快速访问区    描述 操作     Py库 https://www.lfd.uci.edu/~gohlke/pythonlibs/   路径 pip install -i https://pypi.tuna.tsinghua.edu.cn/simple pygame   超时 pip &amp;ndash;default-timeout=100 install tensorflow   镜像    清华 https://pypi.tuna.tsinghua.edu.cn/simple   豆瓣 https://pypi.douban.com/simple    ​
Python 一种面向对象的解释型计算机程序设计语言
python环境 一个解释器和一个包集合.
【python解释器】即python.exe，这才是python的本体。解释器根据python的版本大概分为2和3. python2和3之间无法互相兼容。
【Lib】即python包文件，包括自带的包和第三方包；自带的包,如：日志包logging, 异步包 concurrent；第三方包都放在site-packages文件夹里面，第三方包通过pip/conda install来下载。
Python的强大之处在于它的应用领域范围之广，遍及人工智能、科学计算、Web开发、系统运维、大数据及云计算、金融、游戏开发等。实现其强大功能的前提，就是Python具有数量庞大且功能相对完善的标准库和第三方库。通过对库的引用，能够实现对不同领域业务的开发。然而，正是由于库的数量庞大，对于管理这些库以及对库作及时的维护成为既重要但复杂度又高的事情。那么接下来我们要引入这款神器——Anaconda。
Anaconda 一种可便捷获取包且对包进行管理，同时对环境可以统一管理的发行版本，其包含了conda、Python在内的超过180个科学包及依赖项。Anaconda具有如下特点：开源\安装过程简单\高性能使用Python和R语言\免费的社区支持，其特点的实现主要基于Anaconda拥有的：conda包\环境管理器\1,000+开源库。
Anaconda、conda、pip、virtualenv的区别 ① Anaconda
Anaconda是一个包含180+的科学包及其依赖项的发行版本，其包含的科学包包括：conda, numpy, scipy, ipython notebook等。
② conda
conda是包及其依赖项和环境的管理工具，适用语言：Python, R, Ruby, Lua, Scala, Java, JavaScript, C/C++, FORTRAN，适用平台：Windows, macOS, Linux。</description>
    </item>
    
  </channel>
</rss>